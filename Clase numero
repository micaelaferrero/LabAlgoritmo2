#include "stdafx.h"
#include "iostream"
#include "conio.h"

using namespace std;

class numero{
private:
 int valor;

//funciones privadas
int sumarDigitosR(int n) {
  int x;
  if ( n < 10 ) 
     return n;  
  else 
  {
     x = sumarDigitosR(n/10); //HI, hace todo como n-1         
     return x + (n % 10);  //suma el ultimo digito mas los anteriores	 
  }
}
 public:
  numero() {
   valor=0;   
 }

 void setNum(int n)
 { valor=n; } 
 
 int getNum()
 { return valor; }

int sumarDigitosR() {
	return sumarDigitosR(valor);
}

int numero::sumarDigitos();
int factorial()
{
	int fac=1;

	for(int i=1;i<=valor;i++)
	{
		fac=fac*i;
	}
	return fac;
}
int pot(numero n2);

}; //fin clase

int numero::pot(numero n2)
{
	int i=1,pot=1;

	while (i<=n2.getNum())
	{
		pot=pot*getNum();
		i++;
	}
	
	return (pot);
}

int numero::sumarDigitos(){
int n=valor; int s=0;
while(n>0){
  int d=n % 10;
  s=s + d;
  n=n / 10;
}
return s;
}


void main()
{
	int x,s,y;
	numero n1, n2, n3;
	cout<<"Numero:";
	cin>>x;
	cout<<"Numero:";
	cin>>y;
	n1.setNum(x);
	n2.setNum(y);
	int f= n1.factorial();
	int p=n1.pot(n2);
	cout<<n1.getNum()<<endl;
	s=n1.sumarDigitosR();
	cout<<"Suma: "<<s<<endl;
	cout<<"Factorial: "<<f<<endl;
	cout<<"Potencia: "<<p<<endl;
	getche();
}
